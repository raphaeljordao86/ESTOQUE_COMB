WITH RESULTADO AS (
    SELECT
        b.cod_item,
        b.des_item,
        d.sgl_unidade,
        e.dta_fechamento,
        g.cod_empresa,
        g.nom_fantasia,
        EXTRACT(DOW FROM e.dta_fechamento) :: INTEGER AS semana,
        SUM(ic.qtd_item) :: NUMERIC(10, 2) AS qtd
    FROM
        tab_cupom_fiscal a
        JOIN tab_item_cupom_fiscal ic ON ic.seq_cupom = a.seq_cupom
        JOIN tab_item b ON b.cod_item = ic.cod_item
        JOIN tab_unidade d ON d.cod_unidade = b.cod_unidade
        JOIN tab_fechamento_caixa_pdv e ON e.seq_fechamento = a.seq_fechamento
        JOIN tab_pdv pd ON pd.cod_pdv = e.cod_pdv
        JOIN tab_empresa g ON g.cod_empresa = pd.cod_empresa
    WHERE
        e.dta_fechamento >= CURRENT_DATE - INTERVAL '60 days'
        AND e.dta_fechamento < CURRENT_DATE
        AND a.ind_cancelado = 'N'
        AND ic.ind_cancelado = 'N'
    GROUP BY
        b.cod_item, b.des_item, d.sgl_unidade, e.dta_fechamento, g.cod_empresa, g.nom_fantasia
),

ESTOQUE_ATUAL AS (
    SELECT
        dblink_result.cod_empresa,
        dblink_result.cod_item,
        ROUND(dblink_result.ultima_medicao)::INTEGER AS saldo_atual,
        g.nom_fantasia
    FROM
        dblink(
            'host=192.168.23.198 dbname=fuel_tank_db user=tank_admin password=UvBJOjRYf_Ev5Wg7N0-d4MX_ou6NeADj',
            $$
            SELECT
                emsys AS cod_empresa,
                produto AS cod_item,
                SUM(value) AS ultima_medicao
            FROM (
                SELECT
                    DISTINCT ON (c.tank_id, c.post_id) produto,
                    c.value,
                    p.emsys
                FROM
                    collect AS c
                    JOIN collect_type AS ct ON c.collect_type_id = ct.id
                    JOIN post AS p ON c.post_id = p.id
                    JOIN tank AS t ON CAST(c.tank_id AS integer) = t.tank_id
                    AND p.emsys = t.post_id
                WHERE
                    ct.id = 4
                ORDER BY
                    c.post_id, c.tank_id, c.time DESC
            ) AS tabela
            GROUP BY emsys, produto
            $$
        ) AS dblink_result(cod_empresa INTEGER, cod_item INTEGER, ultima_medicao NUMERIC)
        JOIN tab_empresa g ON g.cod_empresa = dblink_result.cod_empresa
),

PERIODO_ANALISE AS (
    SELECT
        e.cod_empresa,
        e.cod_item,
        e.saldo_atual,
        CEIL(e.saldo_atual / NULLIF(AVG(r.qtd), 0))::INTEGER AS dias_necessarios
    FROM
        ESTOQUE_ATUAL e
        JOIN RESULTADO r ON e.cod_empresa = r.cod_empresa AND e.cod_item = r.cod_item
    GROUP BY e.cod_empresa, e.cod_item, e.saldo_atual
),

PREVISAO_VENDAS AS (
    SELECT
        r.cod_empresa,
        r.cod_item,
        EXTRACT(DOW FROM CURRENT_DATE + i) AS dia_futuro,
        AVG(r.qtd) FILTER (WHERE r.semana = EXTRACT(DOW FROM CURRENT_DATE + i)) AS consumo_previsto
    FROM
        RESULTADO r,
        generate_series(0, (SELECT MAX(dias_necessarios) FROM PERIODO_ANALISE)) AS i
    GROUP BY
        r.cod_empresa, r.cod_item, EXTRACT(DOW FROM CURRENT_DATE + i)
),

PREVISAO_CONSUMO AS (
    SELECT
        e.cod_empresa,
        e.cod_item,
        SUM(COALESCE(pv.consumo_previsto, 0)) / NULLIF((p.dias_necessarios * 24), 0) AS litros_por_hora
    FROM
        ESTOQUE_ATUAL e
        JOIN PERIODO_ANALISE p ON e.cod_empresa = p.cod_empresa AND e.cod_item = p.cod_item
        LEFT JOIN PREVISAO_VENDAS pv ON e.cod_empresa = pv.cod_empresa AND e.cod_item = pv.cod_item
    GROUP BY e.cod_empresa, e.cod_item, p.dias_necessarios
),

RESULTADO_FINAL AS (
    SELECT
        e.cod_empresa,
        e.cod_item,
        b.des_item,
        e.saldo_atual,
        p.litros_por_hora,
        (e.saldo_atual / NULLIF(p.litros_por_hora, 0)) AS horas_atendimento
    FROM
        ESTOQUE_ATUAL e
        JOIN PREVISAO_CONSUMO p ON e.cod_empresa = p.cod_empresa AND e.cod_item = p.cod_item
        JOIN tab_item b ON e.cod_item = b.cod_item
)

SELECT
    CURRENT_DATE AS data_consulta,
    e.nom_fantasia,
    e.cod_item,
    r.des_item,
    e.saldo_atual,
    FLOOR(r.horas_atendimento / 24) || ' dias, ' ||
    FLOOR(MOD(r.horas_atendimento, 24)) || ' horas e ' ||
    ROUND((MOD(r.horas_atendimento, 1) * 60)) || ' minutos' AS previsao_detalhada_atendimento
FROM
    RESULTADO_FINAL r
    JOIN ESTOQUE_ATUAL e ON r.cod_empresa = e.cod_empresa AND r.cod_item = e.cod_item
ORDER BY
    r.cod_empresa, r.cod_item;
